#!/bin/bash
##################################################################
#
#  This file is part of M3C
#  Copyright (C) by authors (2012-2015)
#  
#  Authors:
#    * Dr. Néstor F. Aguirre (2012-2015)
#          nestor.aguirre@uam.es
#    * Dr. Sergio Díaz-Tendero (2012-2015)
#          sergio.diaztendero@uam.es
#    * Prof. M. Paul-Antoine Hervieux (2012-2015)
#          Paul-Antoine.Hervieux@ipcms.unistra.fr
#    * Prof. Fernando Martín (2012-2015)
#          fernando.martin@uam.es
#    * Prof. Manuel Alcamí (2012-2015)
#          manuel.alcami@uam.es
#  
#  Redistribution and use in source and binary forms, with or
#  without modification, are permitted provided that the
#  following conditions are met:
#  
#   * Redistributions of binary or source code must retain
#     the above copyright notice and this list of conditions
#     and/or other materials provided with the distribution.
#   * All advertising materials mentioning features or use of
#     this software must display the following acknowledgement:
#     
#     This product includes software from M3C project.
#
##################################################################

molpro()
{
        ifile=${1%.*}
        echo "" > /dev/null 2> /dev/null & > /dev/null 2> /dev/null
        pid=$!
        MOLPRO_EXE=$HOME/.molpro/bin/molpro
        $MOLPRO_EXE -I /scratch/$USER/$ifile-$pid -d /scratch/$USER/$ifile-$pid -W . --backup 2 --no-xml-output $ifile.com -o $ifile.out
        rm -rf /scratch/$USER/$ifile-$pid
}

generateIsomers()
{
	local iFileXYZ=$1
	
	workDir=${iFileXYZ%.*}
	
	mkdir $workDir
	cd $workDir
	mkdir results
	
	cp ../$iFileXYZ products.xyz

	j=1
	for i in `seq 1 100`
	do
		rm *.out *.out_* *.log_*
		
		cp ../template.com templateEnd.com
# 		sed ...
		molpro templateEnd.com > /dev/null
		
		if [ -n "`grep " \*\*\* M3C successful optimization" template.out`" ]
		then
			cp products.molden results/${iFileXYZ%.*}-$j.molden
			j=$(($j+1))
		fi
		
		M3C -i template.m3c > /dev/null
	done
}

filterIsomers()
{
	iFileXYZ=$1
	
	cd results
	
	list=(`ls *.molden`)

	for i in `seq 0 $(( ${#list[@]}-2 ))`
	do
			for j in `seq $(($i+1)) $(( ${#list[@]}-1 ))`
			do
					if [ -f "${list[$i]}" -a -f "${list[$j]}" ]
					then
							value=`molecule.compare ${list[$i]} ${list[$j]} $alpha | tail -n1`
							
							if [ "$value" = "Connectivity ...  OK" ]
							then
									echo "${list[$i]} ${list[$j]}"
									rm "${list[$j]}"
							fi
					fi
			done
	done
	
	cd ..
}

